6.1. Цртање облика - кругови и многоуглови
==========================================

Цртање кругова
--------------

Библиотека PyGame омогућава и једноставно цртање кругова, коришћењем
функције ``pg.draw.circle``. Параметри функције су редом:

- прозор на коме се црта,
- боја којом се црта,
- уређени пар (обавезно целих бројева) којим се задају координате
  центра круга,
- полупречник круга (обавезно цео број).

Након полупречника је могуће задати и дебљину круга у пикселима (у том
случају се црта само кружна линија, као што је урађено у случају
црвеног круга). Ако се тај параметар изостави, онда се црта круг који
је испуњен бојом (као што је урађено у случају плавог
круга). 

Илуструјмо цртање кругова наредним примером (наведен је само његов
централни део, а да би он могао да функционише ван прегледача веба,
потребно је да се наведе цео програм укључујући и почетни и завршни
део, који је идентичан у свим програмима у овом поглављу).

.. activecode:: krugovi
   :passivecode: onlymain
   :autorun:
   :includesrc: _includes/krugovi.py

Првим позивом функције ``pg.draw.circle`` нацртана је црвена кружница
дебљине 2, са центром у тачки :math:`(50, 50)`, полупречника 30, док је другим
позивом нацртан плави круг са центром у тачки :math:`(150, 150)`, полупречника
30 пиксела.
   

Три круга
'''''''''

.. questionnote::

   Напиши програм који исцртава три круга чији је центар у центру
   прозора. Највећи треба да има полупречник 100 и да
   буде црвен, средњи полупречник 75 и да буде плав, а најмањи
   полупречник 50 и да буде зелен.

У програм смо ставили наредбу за цртање црвеног круга, а твој задатак
је да додаш наредбе за цртање плавог и зеленог круга.
   
.. activecode:: tri_kruga_crtez
   :nocodelens:
   :modaloutput: 
   :enablecopy:
   :playtask:
   :includexsrc: _includes/tri_kruga.py

   # bojimo pozadinu u belo                 
   prozor.fill(pg.Color("white"))
   # crveni krug
   pg.draw.circle(prozor, pg.Color("red"), (100, 100), 100)
   # plavi krug
   pg.draw.circle(prozor, ???, (???, ???), ???)
   # zeleni krug
   ???

Цртање многоуглова
------------------

Троугао се може нацртати помоћу три појединачне дужи. На сличан начин
можемо нацртати и било који други многоугао. Међутим, ако се
многоуглови цртају на тај начин, они се не сматрају као целина и не
могу, на пример, бити попуњени. Библиотека PyGame даје могућност и за
директно цртање многоуглова (каже се и *полигона*).

Многоугао се црта функцијом ``pg.draw.polygon`` чији су параметри
редом:

- прозор на ком се црта,
- боја,
- листа уређених парова који представљају координате темена многоугла
  (она се обично наводи у облику ``[(x1, y1), (x2, y2), ..., (xn,
  yn)]``).

Многоугао се састоји од дужи које спајају суседна темена у наведеној
листи. Подразумева се да је многоугао затворен, тј. да многоугао
садржи и линију између последњег и првог темена. Ако се иза листе
темена наведе дебљина, црта се само ивица многоугла, а ако се тај
аргумент изостави или се наведе нула, онда се многоугао испуњава
бојом.

Размотримо наредни пример.

.. activecode:: mnogougao
   :passivecode: onlymain
   :autorun:
   :includesrc: _includes/mnogougao.py
		
   Многоугао
   ~~~~

Кућицу смо нацртали као црвени испуњен многоугао, а затим смо њен
оквир нацртали као црну многоугаону линију дебљине 3 пиксела. Да не
бисмо исту листу координата наводили два пута, увели смо променљиву
``temena``.
   
Увежбај цртање многоуглова тако што ћеш решити наредних неколико
задатака.

Срце
''''

.. questionnote::

   Напиши програм који исцртава црвено срце.

Срце можемо нацртати и помоћу једног квадрата и два круга.

.. image:: ../../_images/srce_koordinate.png
   :width: 350px
           
Претпоставимо да се центар квадрата (тачка :math:`О`) налази у центру прозора
(координате су јој :math:`(100, 100)`) и претпоставимо да су висина и ширина
квадрата (заправо његове дијагонале) једнаке 100 пиксела. На основу
тога можеш једноставно израчунати положаје темена квадрата (нпр. тачка
A има координате :math:`(50, 100)`). Пошто квадрат није постављен тако да му
странице буду паралелне осама, не можемо га цртати помоћу
``pg.draw.rect``, али можемо помоћу ``pg.draw.polygon``. Центри кругова се
налазе на средиштима страница квадрата. Координате средишта дужи се су једнаке 
аритметичким срединама одговарајућих координата крајева (ово можете да докажете
ако посматрате правоугли троугао коме је дата дуж хипотенуза, а катете су 
паралелне коодинатним осама). На основу реченог лако можемо одредити координате 
центара (на пример, координате тачке :math:`M` су :math:`(75, 75)`). На крају
остаје да се одреди полупречник круга. То можемо урадити
експериментално (тако што испробавамо разне вредности све док док не
добијемо задовољавајућу слику), међутим, много је боље применити знање
из математике и полупречник израчунати. Означимо полупречник круга, страницу 
квадрата и дијагоналу квадрата редом са :math:`r, a, d`. Овде је 
:math:`r = {a \over 2}`, а, пошто је :math:`a = {d \over \sqrt{2}}`, следи да је 
:math:`r = \frac{d}{2 \sqrt{2}} = \frac{d}{4} \sqrt{2}~`. Дужина дијагонале је 
100 пиксела, па је зато полупречник :math:`25 \sqrt{2}`, што је око 35 пиксела.

.. activecode:: srce_crtanje
   :nocodelens:
   :modaloutput: 
   :enablecopy:
   :playtask:
   :includexsrc: _includes/srce-ex1.py

   # kvadrat
   pg.draw.polygon(prozor, pg.Color("red"),
                   [(50, 100), (???, ???), (???, ???), (???, ???)])
   # levi krug
   pg.draw.circle(prozor, pg.Color("red"), (75, 75), ???)
   # desni krug
   ???


Новогодишња јелка
'''''''''''''''''

.. questionnote::

   Напиши програм који исцртава новогодишњу јелку. Потребне координате можеш да очиташ када покренеш пример и позиционираш миша на тачку која те интересује.

.. activecode:: jelka
   :nocodelens:
   :modaloutput: 
   :enablecopy:
   :playtask:
   :includexsrc: _includes/jelka_pomoc.py
   
   # bojimo pozadinu u belo
   prozor.fill(pg.Color("white"))

   # boje koje cemo koristiti
   ZELENA = (0, 100, 36)
   BRAON = (97, 26, 9)

   # krošnja
   pg.draw.polygon(prozor, ZELENA, [(50, 250), (150, 150), (250, 250)])
   pg.draw.polygon(prozor, ZELENA, [(75, ???), (150, 100), (???, 200)])
   pg.draw.polygon(prozor, ???, [(100, 150), (???, ???), (200, ???)])
   # stablo
   ???

Споји тачке
'''''''''''

.. questionnote::

   У низу ``tacke`` дата су темена многоугла. Нацртај тај многоугао на
   позадини боје ``darkgreen``, попуњен бојом ``khaki``. Шта
   представља многоугао који цртамо?

.. activecode:: PyGame_giraffe
   :nocodelens:
   :enablecopy:
   :modaloutput:
   :includexsrc: _includes/zirafa.py

   tacke = [(40, 208), (40, 107), (88, 82), (134, 13), (128, 9), (134, 13), 
      (137, 11), (128, 6), (160, 25), (159, 28), (136, 28), (98, 101),
      (100, 106), (101, 207), (97, 207), (95, 164), (83, 121), (85, 128),
      (54, 128), (55, 119), (44, 165), (44, 208)]
   # bojimo pozadinu prozora u tamno zeleno
   # crtamo mnogougao na osnovu datih taчака

Најважније из ове лекције
-------------------------

* Функција за цртање круга, ``pg.draw.circle`` узима као аргументе прозор на коме се црта, боју, координате центра круга и полупречник круга. 
* Функција за цртање круга у општем облику изгледа овако ``pg.draw.circle(prozor, boja, (centar_x, centar_y), poluprecnik, debljina kruznice)``
* Функција за цртање многоугла, ``pg.draw.polygon`` узима као аргументе прозор на коме се црта, боју, листу координата темена многоугла, дебљину спољне линије
* Функција за цртање многоугла у општем облику изгледа овако ``pg.draw.polygon(prozor, boja, [(teme1_x, teme1_y), (teme2_x, teme2y), (teme3_x, teme3_y)...], debljina)``