Слике и текст
=============

Поред цртања облика Пајгејм омогућује да се у програме укључе и слике као и да се исписује текст. У овој лекцији научићемо да у наше програме укључимо слике и прикажемо текст на екрану.


Приказ слика
------------

Сада сте научили да цртате помоћу геометријских облика, па можемо да
вам откријемо једну тајну. Ако сте раније користити Scratch, знате
колико је интересантно било када сте ликове на екрану могли да
представљате сличицама (било унапред понуђеним, било преузетим са
интернета). И PyGame нуди ту функционалност и то често бива
једноставније него цртање помоћу геометријских облика.

Претпоставићемо да на располагању имамо слику мачке у датотеци
``macka.png``. Ако овај програм покрећеш на свом рачунару (на пример,
из окружења IDLE) потребно је да слику преузмеш и снимиш на исто место
на коме је снимљена и изворна датотека Python програма (датотека са
екстензијом ``py``).

.. image:: ../../_images/macka.png
   :align: center

Први корак је да се слика учита. То се ради помоћу функције
``pg.image.load`` којој се као параметар наводи назив датотеке са
сликом (то су обично датотеке са екстензијама ``png`` или ``jpg``).
После учитавања слике могуће је позвати ``convert()`` да би се слика
превела из формата у којем је записана у датотеци у формат који је
погодан за приказивање на екрану.

Други корак је приказ учитане сличице на екрану (једном учитана слика
се може приказивати и на више места). То радимо помоћу функције
``prozor.blit`` којој се као параметри наводе учитана слика и позиција
на коју ће се поставити њено горње лево теме (ако наведемо координате
:math:`(0, 0)`, слика ће бити приказана у горњем левом углу екрана).

.. activecode:: ucitavanje_i_prikaz_slike
   :passivecode: onlymain
   :autorun: 
   :includesrc: _includes/slika.py


Приказ текста
-------------

PyGame омогућава и да се на екрану пише текст. Тексту је могуће
задавати боју, фонт, величину и положај. Размотримо наредни пример
који у горњем левом углу прозора исписује поруку ``Zdravo svete!``.

Приказ текста захтева неколико корака.

Прво, потребно је одабрати фонт којим ће се текст исписивати. Најлакше
је да употребимо функцију ``pg.font.SysFont`` која прима два
параметра: назив системског фонта (инсталираног на нивоу оперативног
система) и његову величину. Уместо системског фонта могуће је навести
и неку датотеку са фонтом (то су обично ``.ttf`` или ``.otf``
датотеке) и тада се користи функција ``pg.font.Font``, али то нећемо у
наставку користити.

Други корак је да се креира сличица (прецизније објекат типа
``Surface``) која представља нацртани текст. То можемо једноставно
урадити функцијом ``font.render`` где је ``font`` објекат фонта
креиран у претходном кораку, а параметри функције су редом ниска
(стринг) која представља текст који се исписује, логичка вредност која
одређује да ли ће се цртати лепшим линијама (тј. користити такозвана
техника антиалијасинга) и на крају боја којом ће се текст исписивати.

Процедура је надаље потпуно идентична као и у случају слике. У трећем
кораку добијену сличицу можемо поставити на било коју позицију на
екрану (па и на више њих). То радимо као и са свим другим сличицама,
помоћу функције ``prozor.blit`` чији је први параметар сличица, а
други координате на које ће бити постављен горњи леви угао слике
тј. текста.

.. activecode:: pisanje_teksta
   :passivecode: onlymain
   :autorun: 
   :includesrc: _includes/font.py

Центрирана слика
----------------

Пошто су слике правоугаоног облика, оне се такође могу центрирати на
унутар прозора на исти начин као и било који други правоугаоник.

.. questionnote::

   Прилагоди програм који на екрану приказује слику мачке учитану из
   датотеке ``macka.png`` тако да та слика буде центрирана у средини
   екрана.

.. image:: ../../_images/macka.png
   :align: center
   
Да би се слика приказала на средини екрана, очитавамо прво њене
димензије. То можемо урадити помоћу функција ``get_width()`` и
``get_height()``, које враћају ширину и висину слике. Координате се
онда добијају као половина разлике између димензија екрана и димензија
слике која се приказује (сличица је центрирана јер се празан простор
равномерно распоређује са његове обе стране).

.. activecode:: ucitavanje_i_prikaz_slike_sredina
   :passivecode: onlymain
   :autorun: 
   :includesrc: _includes/slika-sredina.py

   
Центрирани текст
----------------

.. questionnote::

   Прилагоди програм који на екран исписује поруку "Здраво свете" тако
   да тај текст буде центриран у средини екрана.

Пошто желимо да текст буде центриран, ту позицију можемо израчунати
тако што одредимо прво ширину и висину текста. За то можемо поново
употребити функције ``get_width()`` и ``get_height()`` као и у случају
слике, а можемо употребити и функцију ``font.size()`` чији је
параметар ниска чија се величина одређује. Координате левог угла се
онда одређује на исти начин као и у случају слике.

.. activecode:: font_sredina
   :nocodelens:
   :enablecopy:
   :modaloutput:
   :playtask:
   :includexsrc: _includes/font-sredina.py

   # font kojim će biti prikazan tekst
   font = pg.font.SysFont("Arial", 40)
   # poruka koja će se ispisivati
   poruka = "Zdravo svete!"
   # gradimo sličicu koja predstavlja tu poruku ispisanu crnom bojom
   tekst = font.render(poruka, True, pg.Color("black"))
   # određujemo veličinu tog teksta (da bismo mogli da ga centriramo)
   (sirina_teksta, visina_teksta) = (tekst.get_width(), tekst.get_height())
   # položaj određujemo tako da tekst bude centriran
   (x, y) = (???, ???)
   # prikazujemo sličicu na odgovarajućem mestu na ekranu
   prozor.blit(tekst, (x, y))
                 

Најважније из ове лекције
-------------------------

* Слике се у Пајгејм програме учитавају помоћу функције ``pg.image.load`` којој се као аргумент прослеђује назив фајла у коме је слика сачувана
* Слике се у Пајгејм програмима на екрану приказују помоћу функције ``prozor.blit()``, чији су аргументи учитана слика и координате горњег левог темена учитане слике. 
* Када приказујемо текст на екрану, потребно је да прво одаберемо фонт који ћемо користити и то се ради помоћу функције ``pg.font.SysFont`` којој се као аргументи прослеђују назив фонта и величина слова. 
* Да бисмо направили сличицу која садржи жељени текст, потребно је да употребимо функцију ``font.render`` која као аргументе узима текст (ниску) који желимо да прикажемо, логичку варијаблу која одређује изглед текста и боју текста.
* Да бисмо приказали текст, користимо функцију ``prozor.blit()`` који као аргумент узима сличицу у којој је текст и координате горњег левог темена те сличице
* Да бисмо добили димензије слика и текста користимо функције ``get_width()`` i ``get_height()``. Те димензије можемо користити како бисмо позиционирали слике и текст.