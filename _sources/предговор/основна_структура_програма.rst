Основна структура програма
==========================

Када кажемо да користимо неку библиотеку, то значи да у своје програме укључујемо скуп унапред припремљених, тематски обједињених елеманата (на пример функција или вредности) који ће нам олакшати програмирање. И Пајгејм je, тако, библиотека која садржи низ елемената намењених програмирању 2д графике и, наравно, прављењу игара. Не оптерећуј се дефиницијом тога шта је Пајгејм библиотека - оно што је важно да разумеш је да **и даље програмираш у Пајтону, али да сада у свој кôд укључујеш елементе који нису део "обичног" Пајтона (т.ј. Пајтонове стандардне библиотеке).**

.. reveal:: napomena1
   :showtitle: Подсетник
   :hidetitle: Сакриј подсетник

   .. infonote:: Подсетник - библиотеке
   
      У програмирању је ово нормална ствар - често ћеш укључивати различите библиотеке и модуле (у Пајтону су то подскупови елемената унутар библиотека) како би употребио/употребила готова решења која се у њима налазе. Сети се да си прошле године користио/користила функције за заокруживање, ``floor`` и ``ceil``, које припадају модулу ``math``. Када бисмо сваки пут морали да испочетка правимо све елементе, програмирање би било готово немогуће. Важно је да разумемо како одређени елементи које употребљавамо раде, али сасвим је уобичајено користити готове елементе из одређених библиотека.

Како изгледају Пајгејм програми
-------------------------------

Хајде да поново погледамо онај неимпресивни програм који црта једну дуж, само што је овог пута кôд пропраћен коментарима и подељен на целине. Обрати пажњу на коментаре у коду испод (ово што је обележено знаком "тараба" - ``#``)

.. activecode:: pygame_osnovni_primer_dogadjaji_pygamebg_ponovo1
   :nocodelens:
   :enablecopy:
   :modaloutput: 

   # -*- acsection: general-init -*-
   # uključujemo biblioteke
   import pygame as pg
   import pygamebg

   # otvaramo prozor
   (sirina, visina) = (400, 400)
   prozor = pygamebg.open_window(sirina, visina, "Pygame")
   # -*- acsection: main -*-

   # bojimo pozadinu prozora u belo
   prozor.fill(pg.Color("white"))
   
   # crtamo crnu duž od tačke (100, 100) do tačke (300, 300) debljine 5
   pg.draw.line(prozor, pg.Color("black"), (100, 100), (300, 300), 5)
   
   # -*- acsection: after-main -*-
   # prikazujemo prozor i čekamo da ga korisnik isključi
   pygamebg.wait_loop()

Вероватно ћеш прво приметити да постоји разлика између ових сивих делова и овог централног, белог дела. Кôд од малопре смо разложили на неке основне целине које се појављују у готово сваком Пајгејм програму са којим ћеш се срести на наредним часовима. Да бисмо уопште писали кôд помоћу Пајгејма неопходно је да прво укључимо потребне библиотеке. Затим, морамо да отворимо прозор одређених димензија. То ће у скоро сваком од наредних програма бити исто, тако да смо решили да тај део засивимо и нећемо очекивати од тебе да се бавиш кодом који је на тамнијој позадини. Исто тако, сиви кôд се налази и на крају сваког програма и тај део кода служи да би приказао оно што је нацртано и да би прозор са графиком остао отворен док не кликнеш на думе за његово затварање. Ни кôд са тамном позадином на крају не треба да анализираш, нити да га мењаш. 

**Оно што ће бити фокус твог рада је овај бели део у средини**. У том делу, налазиће се кôд помоћу кога ћеш цртати облике, контролисати кретање објеката у прозору, укључивати слике, уређивати интеракцију између нацртаних објеката и много тога другог што ћеш видети у наредних неколико часова. 


Ако желиш да сазнаш више
------------------------

Ако ипак желиш да научиш шта значе наредбе у помоћном ("сивом") делу кода и ако желиш да научиш како изгледају Пајгејм програми у којима се не користи библиотека PyGameBg, онда ти саветујемо да прочиташ текст `Испод хаубе: основна структура PyGame програма <https://petlja.org/biblioteka/r/lekcije/pygame-prirucnik/crtanje-cas1_strukturaprograma>`_. Наравно, ако желиш да научиш још нешто о библиотеци Пајгејм, то можеш видети у нашем `Приручнику за седми разред <https://petlja.org/biblioteka/r/lekcije/pygame-prirucnik/pygame>`_.
